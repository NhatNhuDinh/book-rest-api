openapi: 3.0.1
info:
  title: Library API
  description: REST API for managing authors and books
  contact:
    name: Your Name
    email: you@example.com
  version: v1
servers:
- url: http://localhost:8080
tags:
- name: Authors
  description: Quản lý tác giả
- name: Books
  description: Quản lý sách
paths:
  /api/books:
    get:
      tags:
      - Books
      summary: Lấy danh sách sách
      description: "Lấy danh sách sách với khả năng tìm kiếm theo tiêu đề, lọc theo\
        \ tác giả và phân trang"
      operationId: getBooks
      parameters:
      - name: q
        in: query
        description: Từ khóa tìm kiếm theo tiêu đề sách
        required: false
        schema:
          type: string
        example: Truyện
      - name: authorId
        in: query
        description: ID của tác giả để lọc
        required: false
        schema:
          type: integer
          format: int64
        example: 1
      - name: pageable
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/Pageable"
      responses:
        "200":
          description: Danh sách sách
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Page"
    post:
      tags:
      - Books
      summary: Tạo mới sách
      description: Tạo một sách mới với thông tin cơ bản
      operationId: createBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BookCreateRequest"
        required: true
      responses:
        "201":
          description: Sách được tạo thành công
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BookResponse"
              example:
                id: 1
                title: Truyện Kiều
                publishedYear: 1820
                available: true
                authorId: 1
                authorName: Nguyễn Du
        "400":
          description: Dữ liệu không hợp lệ
          content:
            application/json:
              schema:
                type: string
              example:
                errors:
                  title: Tiêu đề sách không được để trống
  /api/authors:
    get:
      tags:
      - Authors
      summary: Lấy danh sách tác giả
      description: Lấy danh sách tác giả với khả năng tìm kiếm và phân trang
      operationId: getAuthors
      parameters:
      - name: q
        in: query
        description: Từ khóa tìm kiếm theo tên tác giả
        required: false
        schema:
          type: string
        example: Nguyễn
      - name: pageable
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/Pageable"
      responses:
        "200":
          description: Danh sách tác giả
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Page"
    post:
      tags:
      - Authors
      summary: Tạo mới tác giả
      description: Tạo một tác giả mới với thông tin cơ bản
      operationId: createAuthor
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthorCreateRequest"
        required: true
      responses:
        "201":
          description: Tác giả được tạo thành công
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorResponse"
              example:
                id: 1
                name: Nguyễn Du
                country: Việt Nam
        "400":
          description: Dữ liệu không hợp lệ
          content:
            application/json:
              schema:
                type: string
              example:
                errors:
                  name: Tên tác giả không được để trống
  /api/books/{id}:
    get:
      tags:
      - Books
      summary: Lấy thông tin sách theo ID
      description: Lấy thông tin chi tiết của một sách dựa trên ID
      operationId: getBook
      parameters:
      - name: id
        in: path
        description: ID của sách
        required: true
        schema:
          type: integer
          format: int64
        example: 1
      responses:
        "200":
          description: Tìm thấy sách
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BookResponse"
        "404":
          description: Không tìm thấy sách
          content:
            application/json:
              schema:
                type: string
              example:
                error: "Không tìm thấy sách với ID: 1"
    delete:
      tags:
      - Books
      summary: Xóa sách
      description: Xóa một sách dựa trên ID
      operationId: deleteBook
      parameters:
      - name: id
        in: path
        description: ID của sách
        required: true
        schema:
          type: integer
          format: int64
        example: 1
      responses:
        "404":
          description: Không tìm thấy sách
          content:
            application/json:
              schema:
                type: string
        "204":
          description: Xóa thành công
    patch:
      tags:
      - Books
      summary: Cập nhật thông tin sách
      description: Cập nhật thông tin của một sách dựa trên ID
      operationId: updateBook
      parameters:
      - name: id
        in: path
        description: ID của sách
        required: true
        schema:
          type: integer
          format: int64
        example: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BookUpdateRequest"
        required: true
      responses:
        "200":
          description: Cập nhật thành công
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BookResponse"
        "404":
          description: Không tìm thấy sách
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Dữ liệu không hợp lệ
          content:
            application/json:
              schema:
                type: string
  /api/authors/{id}:
    get:
      tags:
      - Authors
      summary: Lấy thông tin tác giả theo ID
      description: Lấy thông tin chi tiết của một tác giả dựa trên ID
      operationId: getAuthor
      parameters:
      - name: id
        in: path
        description: ID của tác giả
        required: true
        schema:
          type: integer
          format: int64
        example: 1
      responses:
        "404":
          description: Không tìm thấy tác giả
          content:
            application/json:
              schema:
                type: string
              example:
                error: "Không tìm thấy tác giả với ID: 1"
        "200":
          description: Tìm thấy tác giả
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorResponse"
    delete:
      tags:
      - Authors
      summary: Xóa tác giả
      description: Xóa một tác giả dựa trên ID
      operationId: deleteAuthor
      parameters:
      - name: id
        in: path
        description: ID của tác giả
        required: true
        schema:
          type: integer
          format: int64
        example: 1
      responses:
        "404":
          description: Không tìm thấy tác giả
          content:
            application/json:
              schema:
                type: string
        "204":
          description: Xóa thành công
    patch:
      tags:
      - Authors
      summary: Cập nhật thông tin tác giả
      description: Cập nhật thông tin của một tác giả dựa trên ID
      operationId: updateAuthor
      parameters:
      - name: id
        in: path
        description: ID của tác giả
        required: true
        schema:
          type: integer
          format: int64
        example: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthorUpdateRequest"
        required: true
      responses:
        "404":
          description: Không tìm thấy tác giả
          content:
            application/json:
              schema:
                type: string
        "200":
          description: Cập nhật thành công
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorResponse"
        "400":
          description: Dữ liệu không hợp lệ
          content:
            application/json:
              schema:
                type: string
components:
  schemas:
    BookCreateRequest:
      required:
      - authorId
      - title
      type: object
      properties:
        title:
          type: string
          description: Tiêu đề của sách
          example: Truyện Kiều
        publishedYear:
          type: integer
          description: Năm xuất bản
          format: int32
          example: 1820
        authorId:
          type: integer
          description: ID của tác giả
          format: int64
          example: 1
        available:
          type: boolean
          description: Trạng thái có sẵn để mượn
          example: true
      description: Request tạo mới sách
    BookResponse:
      type: object
      properties:
        id:
          type: integer
          description: ID duy nhất của sách
          format: int64
          example: 1
        title:
          type: string
          description: Tiêu đề của sách
          example: Truyện Kiều
        publishedYear:
          type: integer
          description: Năm xuất bản
          format: int32
          example: 1820
        available:
          type: boolean
          description: Trạng thái có sẵn để mượn
          example: true
        authorId:
          type: integer
          description: ID của tác giả
          format: int64
          example: 1
        authorName:
          type: string
          description: Tên tác giả
          example: Nguyễn Du
      description: Response thông tin sách
    AuthorCreateRequest:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Tên đầy đủ của tác giả
          example: Nguyễn Du
        country:
          type: string
          description: Quốc gia của tác giả
          example: Việt Nam
      description: Request tạo mới tác giả
    AuthorResponse:
      type: object
      properties:
        id:
          type: integer
          description: ID duy nhất của tác giả
          format: int64
          example: 1
        name:
          type: string
          description: Tên đầy đủ của tác giả
          example: Nguyễn Du
        country:
          type: string
          description: Quốc gia của tác giả
          example: Việt Nam
      description: Response thông tin tác giả
    BookUpdateRequest:
      type: object
      properties:
        title:
          type: string
          description: Tiêu đề của sách
          example: Truyện Kiều
        publishedYear:
          type: integer
          description: Năm xuất bản
          format: int32
          example: 1820
        authorId:
          type: integer
          description: ID của tác giả
          format: int64
          example: 1
        available:
          type: boolean
          description: Trạng thái có sẵn để mượn
          example: true
      description: Request cập nhật sách
    AuthorUpdateRequest:
      type: object
      properties:
        name:
          type: string
          description: Tên đầy đủ của tác giả
          example: Nguyễn Du
        country:
          type: string
          description: Quốc gia của tác giả
          example: Việt Nam
      description: Request cập nhật tác giả
    Pageable:
      type: object
      properties:
        page:
          minimum: 0
          type: integer
          format: int32
        size:
          minimum: 1
          type: integer
          format: int32
        sort:
          type: array
          items:
            type: string
    Page:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            type: object
        number:
          type: integer
          format: int32
        sort:
          type: array
          items:
            $ref: "#/components/schemas/SortObject"
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        pageable:
          $ref: "#/components/schemas/PageableObject"
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          type: array
          items:
            $ref: "#/components/schemas/SortObject"
        paged:
          type: boolean
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        unpaged:
          type: boolean
    SortObject:
      type: object
      properties:
        direction:
          type: string
        nullHandling:
          type: string
        ascending:
          type: boolean
        property:
          type: string
        ignoreCase:
          type: boolean
